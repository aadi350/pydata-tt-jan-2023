import numpy as np

class ComplexNumber:
    def __init__(self, real, imaginary):
        self.real = real
        self.imaginary = imaginary

    def __add__(self, other):
        return ComplexNumber(
            real=self.real+other.real, 
            imaginary=self.imaginary+other.imaginary)

    def __sub__(self, other):
        return ComplexNumber(
            real=self.real-other.real, 
            imaginary=self.imaginary-other.imaginary)

    def __mul__(self, other):
        return ComplexNumber(
                real=self.real*other.real - self.imaginary*other.imaginary,
                imaginary=self.real*other.imaginary + self.imaginary*other.real
            )

    def __len__(self,):
        return int(np.sqrt(np.power(self.real, 2) + np.power(self.imaginary, 2)))

    def __repr__(self, ):
        return f'{self.real} + {self.imaginary}j' 


c1 = ComplexNumber(real=3, imaginary=4)
c2 = ComplexNumber(real=-1, imaginary=4)

len(c1) # what should this do?

